<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.handist</groupId>
	<artifactId>collections</artifactId>
	<packaging>jar</packaging>
	<version>v1.1.0</version>

	<name>handistCollections</name>
	<description>A simple distributed collection's library</description>
	<url>https://github.com/handist</url>

	<profiles>
		<profile>
			<!-- Profile "mpj" activated by default -->
			<id>mpj</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.github.handist</groupId>
					<artifactId>MPJ</artifactId>
					<version>0.44</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<mpirunner.mpiImpl>mpj-multicore</mpirunner.mpiImpl>
								<mpirunner.dryRun>true</mpirunner.dryRun>
								<mpirunner.actionOnError>ignore</mpirunner.actionOnError>
								<mpirunner.notificationsPath>target/mpi-junit</mpirunner.notificationsPath>
								<mpirunner.keepNotifications>true</mpirunner.keepNotifications>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Profile mpj native can be activated via the command line -->
			<id>mpjnative</id>
			<dependencies>
				<dependency>
					<groupId>com.github.handist</groupId>
					<artifactId>MPJ</artifactId>
					<version>0.44</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<mpirunner.mpiImpl>mpj-native</mpirunner.mpiImpl>
								<mpirunner.notificationsPath>target/mpi-junit</mpirunner.notificationsPath>
								<mpirunner.keepNotifications>true</mpirunner.keepNotifications>
								<mpirunner.mpirunOptions>--oversubscribe</mpirunner.mpirunOptions>
								<mpirunner.parseNotifications>0</mpirunner.parseNotifications>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Profile mpijava can be activated via the command line -->
			<id>mpijava</id>
			<dependencies>
				<dependency>
					<groupId>com.github.handist</groupId>
					<artifactId>mpijava</artifactId>
					<version>v1.2.7</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<mpirunner.mpiImpl>native</mpirunner.mpiImpl>
								<mpirunner.notificationsPath>target/mpi-junit</mpirunner.notificationsPath>
								<mpirunner.keepNotifications>true</mpirunner.keepNotifications>
								<mpirunner.javaLibraryPath>${env.MPIJAVA_LIB}</mpirunner.javaLibraryPath>
								<mpirunner.mpirunOptions>--oversubscribe</mpirunner.mpirunOptions>
								<mpirunner.parseNotifications>0</mpirunner.parseNotifications>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>hostfile-file-present</id>
			<activation>
				<file>
					<exists>HOSTFILE</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<mpirunner.mpirunOptions>--hostfile HOSTFILE</mpirunner.mpirunOptions>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Profile automatically activated when the property "hostfile" is specified 
				(mvn -Dhostfile=/path/to/hostfile) -->
			<id>explicit-hostfile</id>
			<activation>
				<property>
					<name>hostfile</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<!-- override the default and specify the hostfile -->
								<mpirunner.mpirunOptions>--hostfile ${hostfile}</mpirunner.mpirunOptions>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.github.handist</groupId>
			<artifactId>apgas</artifactId>
			<version>handist-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>com.github.handist</groupId>
			<artifactId>mpi-junit</artifactId>
			<version>v1.2.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plusings</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<forkNode
						implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory" />
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.0.0-M5</version>
				<configuration>
					<forkNode
						implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory" />
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven 
				defaults (may be moved to parent pom) -->
			<plugins>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>3.0.0-M5</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<artifactId>maven-project-info-reports-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>
